{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","React","memo","goods","map","good","style","color","name","id","getAll","fetch","then","response","json","get5First","sort","currentGood","nextGood","localeCompare","slice","getRedGoods","filter","App","useState","visibleGoods","setVisibleGoods","loadingError","setLoadingError","handleGoodsLoad","callback","catch","error","className","type","onClick","length","ReactDOM","render","document","getElementById"],"mappings":"iNAOaA,EAA6BC,IAAMC,MAC9C,gBAAGC,EAAH,EAAGA,MAAH,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAOF,EAAKE,OAHvB,SAKGF,EAAKG,MAJDH,EAAKI,YCPb,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAAAT,GAAK,OAAIA,EACZa,MAAK,SAACC,EAAaC,GAAd,OACJD,EAAYT,KAAKW,cAAcD,EAASV,SAEzCY,MAAM,EAAG,OAGHC,EAAc,WACzB,OAAOX,IACJE,MAAK,SAAAT,GAAK,OAAIA,EAAMmB,QAAO,SAAAjB,GAAI,MAAmB,QAAfA,EAAKE,aCfhCgB,EAAgB,WAC3B,MAAwCC,mBAAiB,IAAzD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEMC,EAAkB,SAACC,GACvBA,IACGlB,MAAK,SAAAT,GAAK,OAAIuB,EAAgBvB,MAC9B4B,OAAM,SAAAC,GAAK,OAAIJ,EAAgBI,OAGpC,OACE,sBAAKC,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMN,EAAgBnB,IAHjC,4BAQA,wBACEwB,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMN,EAAgBd,IAHjC,gCAQA,wBACEmB,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMN,EAAgBR,IAHjC,4BAOCM,EAAaS,OAAS,GACrB,yDACyBT,KAI1BF,EAAaW,OAAS,EACnB,cAACpC,EAAD,CAAWG,MAAOsB,IAElB,6CCjDVY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.09b081dc.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(\n  ({ goods }) => (\n    <ul>\n      {goods.map(good => (\n        <li\n          key={good.id}\n          data-cy=\"good\"\n          style={{ color: good.color }}\n        >\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  ),\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((currentGood, nextGood) => (\n        currentGood.name.localeCompare(nextGood.name)\n      ))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nexport const App: React.FC = () => {\n  const [visibleGoods, setVisibleGoods] = useState<Good[]>([]);\n  const [loadingError, setLoadingError] = useState('');\n\n  const handleGoodsLoad = (callback: () => Promise<Good[]>) => {\n    callback()\n      .then(goods => setVisibleGoods(goods))\n      .catch(error => setLoadingError(error));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => handleGoodsLoad(getAll)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => handleGoodsLoad(get5First)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => handleGoodsLoad(getRedGoods)}\n      >\n        Load red goods\n      </button>\n      {loadingError.length > 0 && (\n        <p>\n          {`Error on loading - ${loadingError}`}\n        </p>\n      )}\n\n      {visibleGoods.length > 0\n        ? <GoodsList goods={visibleGoods} />\n        : (\n          <p>\n            No goods\n          </p>\n        )}\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}